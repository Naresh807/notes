
spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=Tweets_Spring_Consumer_Group
spring.kafka.consumer.auto-offset-reset=latest

@Configuration
@EnableKafka
public class KafkaConfiguration {
  
  	@Bean
	ConcurrentKafkaListenerContainerFactory<?, ?> kafkaListenerContainerFactory(
			ConcurrentKafkaListenerContainerFactoryConfigurer configurer,
			ConsumerFactory<Object, Object> kafkaConsumerFactory) {
		ConcurrentKafkaListenerContainerFactory<Object, Object> factory = new ConcurrentKafkaListenerContainerFactory<>();
		configurer.configure(factory, kafkaConsumerFactory);
        factory.setConsumerFactory(kafkaConsumerFactory);
		//factory.getContainerProperties().setAckMode(AckMode.MANUAL);
		factory.setConcurrency(3);
		return factory;
	} 
}    

@Component
@Slf4j
public class TweetsConsumer {
	
	@KafkaListener(topics = {"twitter_tweets"})
	public void onMessage(ConsumerRecord< String, String> record) {
		log.info("Consumer Record : {} ", record);
	}
}
